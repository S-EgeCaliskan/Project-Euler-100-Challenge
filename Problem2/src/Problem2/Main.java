package Problem2;

public class Main {
   /*
   Problem 2: Even Fibonacci Numbers

   Each new term in the Fibonacci sequence is generated by adding the previous two terms.
   By starting with 1 and 2, the first 10 terms will be:

   1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

   By considering the terms in the Fibonacci sequence whose values do not exceed four million,
   find the sum of the even-valued terms.
   */
   public static void main(String[] args) {

      //The first two values of the sequence
      int x = 0;
      int y = 1;
      // The variable to store the general sum of the sequence
      int sum = 0;
      //To collect only the evenNumbers' sum.
      int evenNumbers = 0;

      //The Fibonacci sequence
      while (sum < 4000000){
         //Finding the sum of even-valued terms:
         //Getting the sum first, so it meets the while condition.
         // And it doesn't surpass the four million mark.
         if(sum % 2 == 0) {
            //The if statement gets the even numbers.
            evenNumbers = sum + evenNumbers;
         }
         //Getting the addition of the two variables.
         sum = x + y;
         // Making getting x to the value of the sum to keep on going with the adding.
         x = x + y;
         //Shifting y to the old value of x in order to be able to add on top of that integer.
         y = x - y;
      }
      System.out.println("The result is: " + evenNumbers);
      }
}


